"use strict";
var _constants = require("./constants");
function setAuthenticationCookie(options, response, accessToken, param) {
    var rememberMe = param === void 0 ? false : param;
    var authenticationCookieName = getAuthenticationCookieName(options), access_token = accessToken, json = {
        access_token: access_token
    }, name = authenticationCookieName, value = JSON.stringify(json), parameters = getParameters(options, rememberMe);
    response.cookie(name, value, parameters);
}
function removeAuthenticationCookie(options, response) {
    var authenticationCookieNAme = getAuthenticationCookieName(options), name = authenticationCookieNAme; ///
    response.clearCookie(name);
}
function isAuthenticationCookiePresent(options, request) {
    var cookies = request.cookies, authenticationCookieNAme = getAuthenticationCookieName(options), name = authenticationCookieNAme, authenticationCookiePresent = !!cookies[name];
    return authenticationCookiePresent;
}
function getAccessTokenFromAuthenticationCookie(options, request) {
    var accessToken = null;
    var authenticationCookiePresent = isAuthenticationCookiePresent(options, request);
    if (authenticationCookiePresent) {
        var cookies = request.cookies, authenticationCookieNAme = getAuthenticationCookieName(options), name = authenticationCookieNAme, value = !!cookies[name];
        try {
            var json = JSON.parse(value), access_token = json.access_token;
            accessToken = access_token; ///
        } catch (error) {
            accessToken = value; ///
        }
    }
    return accessToken;
}
module.exports = {
    setAuthenticationCookie: setAuthenticationCookie,
    removeAuthenticationCookie: removeAuthenticationCookie,
    isAuthenticationCookiePresent: isAuthenticationCookiePresent,
    getAccessTokenFromAuthenticationCookie: getAccessTokenFromAuthenticationCookie
};
function getAuthenticationCookieName(options) {
    var clientId = options.clientId, authenticationCookieName = "".concat(_constants.AUTHENTICATION_COOKIE_NAME_PREFIX, ".").concat(clientId);
    return authenticationCookieName;
}
function getParameters(options, rememberMe) {
    var parameters = {
    }, domain = options.domain;
    if (domain) {
        Object.assign(parameters, {
            domain: domain
        });
    }
    if (rememberMe) {
        var expires = _constants.AUTHENTICATION_COOKIE_EXPIRES;
        Object.assign(parameters, {
            expires: expires
        });
    }
    return parameters;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb29raWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IEFVVEhFTlRJQ0FUSU9OX0NPT0tJRV9FWFBJUkVTLCBBVVRIRU5USUNBVElPTl9DT09LSUVfTkFNRV9QUkVGSVggfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZnVuY3Rpb24gc2V0QXV0aGVudGljYXRpb25Db29raWUob3B0aW9ucywgcmVzcG9uc2UsIGFjY2Vzc1Rva2VuLCByZW1lbWJlck1lID0gZmFsc2UpIHtcbiAgY29uc3QgYXV0aGVudGljYXRpb25Db29raWVOYW1lID0gZ2V0QXV0aGVudGljYXRpb25Db29raWVOYW1lKG9wdGlvbnMpLFxuICAgICAgICBhY2Nlc3NfdG9rZW4gPSBhY2Nlc3NUb2tlbiwgLy8vXG4gICAgICAgIGpzb24gPSB7XG4gICAgICAgICAgYWNjZXNzX3Rva2VuXG4gICAgICAgIH0sXG4gICAgICAgIG5hbWUgPSBhdXRoZW50aWNhdGlvbkNvb2tpZU5hbWUsICAvLy9cbiAgICAgICAgdmFsdWUgPSBKU09OLnN0cmluZ2lmeShqc29uKSxcbiAgICAgICAgcGFyYW1ldGVycyA9IGdldFBhcmFtZXRlcnMob3B0aW9ucywgcmVtZW1iZXJNZSk7XG5cbiAgcmVzcG9uc2UuY29va2llKG5hbWUsIHZhbHVlLCBwYXJhbWV0ZXJzKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQXV0aGVudGljYXRpb25Db29raWUob3B0aW9ucywgcmVzcG9uc2UpIHtcbiAgY29uc3QgYXV0aGVudGljYXRpb25Db29raWVOQW1lID0gZ2V0QXV0aGVudGljYXRpb25Db29raWVOYW1lKG9wdGlvbnMpLFxuICAgICAgICBuYW1lID0gYXV0aGVudGljYXRpb25Db29raWVOQW1lOyAgLy8vXG5cbiAgcmVzcG9uc2UuY2xlYXJDb29raWUobmFtZSk7XG59XG5cbmZ1bmN0aW9uIGlzQXV0aGVudGljYXRpb25Db29raWVQcmVzZW50KG9wdGlvbnMsIHJlcXVlc3QpIHtcbiAgY29uc3QgeyBjb29raWVzIH0gPSByZXF1ZXN0LFxuICAgICAgICBhdXRoZW50aWNhdGlvbkNvb2tpZU5BbWUgPSBnZXRBdXRoZW50aWNhdGlvbkNvb2tpZU5hbWUob3B0aW9ucyksXG4gICAgICAgIG5hbWUgPSBhdXRoZW50aWNhdGlvbkNvb2tpZU5BbWUsICAvLy9cbiAgICAgICAgYXV0aGVudGljYXRpb25Db29raWVQcmVzZW50ID0gISFjb29raWVzW25hbWVdO1xuXG4gIHJldHVybiBhdXRoZW50aWNhdGlvbkNvb2tpZVByZXNlbnQ7XG59XG5cbmZ1bmN0aW9uIGdldEFjY2Vzc1Rva2VuRnJvbUF1dGhlbnRpY2F0aW9uQ29va2llKG9wdGlvbnMsIHJlcXVlc3QpIHtcbiAgbGV0IGFjY2Vzc1Rva2VuID0gbnVsbDtcblxuICBjb25zdCBhdXRoZW50aWNhdGlvbkNvb2tpZVByZXNlbnQgPSBpc0F1dGhlbnRpY2F0aW9uQ29va2llUHJlc2VudChvcHRpb25zLCByZXF1ZXN0KTtcblxuICBpZiAoYXV0aGVudGljYXRpb25Db29raWVQcmVzZW50KSB7XG4gICAgY29uc3QgeyBjb29raWVzIH0gPSByZXF1ZXN0LFxuICAgICAgICAgIGF1dGhlbnRpY2F0aW9uQ29va2llTkFtZSA9IGdldEF1dGhlbnRpY2F0aW9uQ29va2llTmFtZShvcHRpb25zKSxcbiAgICAgICAgICBuYW1lID0gYXV0aGVudGljYXRpb25Db29raWVOQW1lLCAgLy8vXG4gICAgICAgICAgdmFsdWUgPSAhIWNvb2tpZXNbbmFtZV07XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QganNvbiA9IEpTT04ucGFyc2UodmFsdWUpLFxuICAgICAgICAgICAgeyBhY2Nlc3NfdG9rZW4gfSA9IGpzb247XG5cbiAgICAgIGFjY2Vzc1Rva2VuID0gYWNjZXNzX3Rva2VuOyAvLy9cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgYWNjZXNzVG9rZW4gPSB2YWx1ZTsgIC8vL1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhY2Nlc3NUb2tlbjtcbn1cblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0QXV0aGVudGljYXRpb25Db29raWUsXG4gIHJlbW92ZUF1dGhlbnRpY2F0aW9uQ29va2llLFxuICBpc0F1dGhlbnRpY2F0aW9uQ29va2llUHJlc2VudCxcbiAgZ2V0QWNjZXNzVG9rZW5Gcm9tQXV0aGVudGljYXRpb25Db29raWVcbn07XG5cbmZ1bmN0aW9uIGdldEF1dGhlbnRpY2F0aW9uQ29va2llTmFtZShvcHRpb25zKSB7XG4gIGNvbnN0IHsgY2xpZW50SWQgfSA9IG9wdGlvbnMsXG4gICAgICAgIGF1dGhlbnRpY2F0aW9uQ29va2llTmFtZSA9IGAke0FVVEhFTlRJQ0FUSU9OX0NPT0tJRV9OQU1FX1BSRUZJWH0uJHtjbGllbnRJZH1gO1xuXG4gIHJldHVybiBhdXRoZW50aWNhdGlvbkNvb2tpZU5hbWU7XG59XG5cbmZ1bmN0aW9uIGdldFBhcmFtZXRlcnMob3B0aW9ucywgcmVtZW1iZXJNZSkge1xuICBjb25zdCBwYXJhbWV0ZXJzID0ge30sXG4gICAgICAgIHsgZG9tYWluIH0gPSBvcHRpb25zO1xuXG4gIGlmIChkb21haW4pIHtcbiAgICBPYmplY3QuYXNzaWduKHBhcmFtZXRlcnMsIHtcbiAgICAgIGRvbWFpblxuICAgIH0pO1xuICB9XG5cbiAgaWYgKHJlbWVtYmVyTWUpIHtcbiAgICBjb25zdCBleHBpcmVzID0gQVVUSEVOVElDQVRJT05fQ09PS0lFX0VYUElSRVM7XG5cbiAgICBPYmplY3QuYXNzaWduKHBhcmFtZXRlcnMsIHtcbiAgICAgIGV4cGlyZXNcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBwYXJhbWV0ZXJzO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJDQUFBLFVBQVk7SUFFcUUsVUFBYTtTQUVyRix1QkFBdUIsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxLQUFrQjtRQUFsQixVQUFVLEdBQVYsS0FBa0IsY0FBTCxLQUFLLEdBQWxCLEtBQWtCO1FBQzNFLHdCQUF3QixHQUFHLDJCQUEyQixDQUFDLE9BQU8sR0FDOUQsWUFBWSxHQUFHLFdBQVcsRUFDMUIsSUFBSTtRQUNGLFlBQVksRUFBWixZQUFZO09BRWQsSUFBSSxHQUFHLHdCQUF3QixFQUMvQixLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQzNCLFVBQVUsR0FBRyxhQUFhLENBQUMsT0FBTyxFQUFFLFVBQVU7SUFFcEQsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLFVBQVU7O1NBR2hDLDBCQUEwQixDQUFDLE9BQU8sRUFBRSxRQUFRO1FBQzdDLHdCQUF3QixHQUFHLDJCQUEyQixDQUFDLE9BQU8sR0FDOUQsSUFBSSxHQUFHLHdCQUF3QixDQUFHLENBQUcsQUFBSCxFQUFHLEFBQUgsQ0FBRztJQUUzQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUk7O1NBR2xCLDZCQUE2QixDQUFDLE9BQU8sRUFBRSxPQUFPO1FBQzdDLE9BQU8sR0FBSyxPQUFPLENBQW5CLE9BQU8sRUFDVCx3QkFBd0IsR0FBRywyQkFBMkIsQ0FBQyxPQUFPLEdBQzlELElBQUksR0FBRyx3QkFBd0IsRUFDL0IsMkJBQTJCLEtBQUssT0FBTyxDQUFDLElBQUk7V0FFM0MsMkJBQTJCOztTQUczQixzQ0FBc0MsQ0FBQyxPQUFPLEVBQUUsT0FBTztRQUMxRCxXQUFXLEdBQUcsSUFBSTtRQUVoQiwyQkFBMkIsR0FBRyw2QkFBNkIsQ0FBQyxPQUFPLEVBQUUsT0FBTztRQUU5RSwyQkFBMkI7WUFDckIsT0FBTyxHQUFLLE9BQU8sQ0FBbkIsT0FBTyxFQUNULHdCQUF3QixHQUFHLDJCQUEyQixDQUFDLE9BQU8sR0FDOUQsSUFBSSxHQUFHLHdCQUF3QixFQUMvQixLQUFLLEtBQUssT0FBTyxDQUFDLElBQUk7O2dCQUdwQixJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQ3JCLFlBQVksR0FBSyxJQUFJLENBQXJCLFlBQVk7WUFFcEIsV0FBVyxHQUFHLFlBQVksQ0FBRSxDQUFHLEFBQUgsRUFBRyxBQUFILENBQUc7aUJBQ3hCLEtBQUs7WUFDWixXQUFXLEdBQUcsS0FBSyxDQUFHLENBQUcsQUFBSCxFQUFHLEFBQUgsQ0FBRzs7O1dBSXRCLFdBQVc7O0FBSXBCLE1BQU0sQ0FBQyxPQUFPO0lBQ1osdUJBQXVCLEVBQXZCLHVCQUF1QjtJQUN2QiwwQkFBMEIsRUFBMUIsMEJBQTBCO0lBQzFCLDZCQUE2QixFQUE3Qiw2QkFBNkI7SUFDN0Isc0NBQXNDLEVBQXRDLHNDQUFzQzs7U0FHL0IsMkJBQTJCLENBQUMsT0FBTztRQUNsQyxRQUFRLEdBQUssT0FBTyxDQUFwQixRQUFRLEVBQ1Ysd0JBQXdCLE1BQTJDLE1BQVEsQ0FqRUYsVUFBYSxxQ0FpRXRCLENBQUMsR0FBVyxNQUFBLENBQVQsUUFBUTtXQUUxRSx3QkFBd0I7O1NBR3hCLGFBQWEsQ0FBQyxPQUFPLEVBQUUsVUFBVTtRQUNsQyxVQUFVO09BQ1IsTUFBTSxHQUFLLE9BQU8sQ0FBbEIsTUFBTTtRQUVWLE1BQU07UUFDUixNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVU7WUFDdEIsTUFBTSxFQUFOLE1BQU07OztRQUlOLFVBQVU7WUFDTixPQUFPLEdBakZnRSxVQUFhO1FBbUYxRixNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVU7WUFDdEIsT0FBTyxFQUFQLE9BQU87OztXQUlKLFVBQVUifQ==