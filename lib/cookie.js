"use strict";
import { AUTHENTICATION_COOKIE_EXPIRES, AUTHENTICATION_COOKIE_NAME_PREFIX } from "./constants";
function setAuthenticationCookie(options, response, accessToken, param) {
    var rememberMe = param === void 0 ? false : param;
    var authenticationCookieName = getAuthenticationCookieName(options), json = {
        accessToken: accessToken
    }, name = authenticationCookieName, value = JSON.stringify(json), parameters = getParameters(rememberMe);
    response.cookie(name, value, parameters);
}
function removeAuthenticationCookie(options, response) {
    var authenticationCookieNAme = getAuthenticationCookieName(options), name = authenticationCookieNAme; ///
    response.clearCookie(name);
}
function isAuthenticationCookiePresent(options, request) {
    var cookies = request.cookies, authenticationCookieNAme = getAuthenticationCookieName(options), name = authenticationCookieNAme, authenticationCookiePresent = !!cookies[name];
    return authenticationCookiePresent;
}
module.exports = {
    setAuthenticationCookie: setAuthenticationCookie,
    removeAuthenticationCookie: removeAuthenticationCookie,
    isAuthenticationCookiePresent: isAuthenticationCookiePresent
};
function getAuthenticationCookieName(options) {
    var clientId = options.clientId, authenticationCookieName = "".concat(AUTHENTICATION_COOKIE_NAME_PREFIX, ".").concat(clientId);
    return authenticationCookieName;
}
function getParameters(rememberMe) {
    var parameters = {
    };
    if (rememberMe) {
        var expires = AUTHENTICATION_COOKIE_EXPIRES;
        Object.assign(parameters, {
            expires: expires
        });
    }
    return parameters;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb29raWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IEFVVEhFTlRJQ0FUSU9OX0NPT0tJRV9FWFBJUkVTLCBBVVRIRU5USUNBVElPTl9DT09LSUVfTkFNRV9QUkVGSVggfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZnVuY3Rpb24gc2V0QXV0aGVudGljYXRpb25Db29raWUob3B0aW9ucywgcmVzcG9uc2UsIGFjY2Vzc1Rva2VuLCByZW1lbWJlck1lID0gZmFsc2UpIHtcbiAgY29uc3QgYXV0aGVudGljYXRpb25Db29raWVOYW1lID0gZ2V0QXV0aGVudGljYXRpb25Db29raWVOYW1lKG9wdGlvbnMpLFxuICAgICAgICBqc29uID0ge1xuICAgICAgICAgIGFjY2Vzc1Rva2VuXG4gICAgICAgIH0sXG4gICAgICAgIG5hbWUgPSBhdXRoZW50aWNhdGlvbkNvb2tpZU5hbWUsICAvLy9cbiAgICAgICAgdmFsdWUgPSBKU09OLnN0cmluZ2lmeShqc29uKSxcbiAgICAgICAgcGFyYW1ldGVycyA9IGdldFBhcmFtZXRlcnMocmVtZW1iZXJNZSk7XG5cbiAgcmVzcG9uc2UuY29va2llKG5hbWUsIHZhbHVlLCBwYXJhbWV0ZXJzKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQXV0aGVudGljYXRpb25Db29raWUob3B0aW9ucywgcmVzcG9uc2UpIHtcbiAgY29uc3QgYXV0aGVudGljYXRpb25Db29raWVOQW1lID0gZ2V0QXV0aGVudGljYXRpb25Db29raWVOYW1lKG9wdGlvbnMpLFxuICAgICAgICBuYW1lID0gYXV0aGVudGljYXRpb25Db29raWVOQW1lOyAgLy8vXG5cbiAgcmVzcG9uc2UuY2xlYXJDb29raWUobmFtZSk7XG59XG5cbmZ1bmN0aW9uIGlzQXV0aGVudGljYXRpb25Db29raWVQcmVzZW50KG9wdGlvbnMsIHJlcXVlc3QpIHtcbiAgY29uc3QgeyBjb29raWVzIH0gPSByZXF1ZXN0LFxuICAgICAgICBhdXRoZW50aWNhdGlvbkNvb2tpZU5BbWUgPSBnZXRBdXRoZW50aWNhdGlvbkNvb2tpZU5hbWUob3B0aW9ucyksXG4gICAgICAgIG5hbWUgPSBhdXRoZW50aWNhdGlvbkNvb2tpZU5BbWUsICAvLy9cbiAgICAgICAgYXV0aGVudGljYXRpb25Db29raWVQcmVzZW50ID0gISFjb29raWVzW25hbWVdO1xuXG4gIHJldHVybiBhdXRoZW50aWNhdGlvbkNvb2tpZVByZXNlbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXRBdXRoZW50aWNhdGlvbkNvb2tpZSxcbiAgcmVtb3ZlQXV0aGVudGljYXRpb25Db29raWUsXG4gIGlzQXV0aGVudGljYXRpb25Db29raWVQcmVzZW50XG59O1xuXG5mdW5jdGlvbiBnZXRBdXRoZW50aWNhdGlvbkNvb2tpZU5hbWUob3B0aW9ucykge1xuICBjb25zdCB7IGNsaWVudElkIH0gPSBvcHRpb25zLFxuICAgICAgICBhdXRoZW50aWNhdGlvbkNvb2tpZU5hbWUgPSBgJHtBVVRIRU5USUNBVElPTl9DT09LSUVfTkFNRV9QUkVGSVh9LiR7Y2xpZW50SWR9YDtcblxuICByZXR1cm4gYXV0aGVudGljYXRpb25Db29raWVOYW1lO1xufVxuXG5mdW5jdGlvbiBnZXRQYXJhbWV0ZXJzKHJlbWVtYmVyTWUpIHtcbiAgY29uc3QgcGFyYW1ldGVycyA9IHt9O1xuXG4gIGlmIChyZW1lbWJlck1lKSB7XG4gICAgY29uc3QgZXhwaXJlcyA9IEFVVEhFTlRJQ0FUSU9OX0NPT0tJRV9FWFBJUkVTO1xuXG4gICAgT2JqZWN0LmFzc2lnbihwYXJhbWV0ZXJzLCB7XG4gICAgICBleHBpcmVzXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gcGFyYW1ldGVycztcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQSxVQUFZO1NBRUgsNkJBQTZCLEVBQUUsaUNBQWlDLFNBQVEsV0FBYTtTQUVyRix1QkFBdUIsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxLQUFrQjtRQUFsQixVQUFVLEdBQVYsS0FBa0IsY0FBTCxLQUFLLEdBQWxCLEtBQWtCO1FBQzNFLHdCQUF3QixHQUFHLDJCQUEyQixDQUFDLE9BQU8sR0FDOUQsSUFBSTtRQUNGLFdBQVcsRUFBWCxXQUFXO09BRWIsSUFBSSxHQUFHLHdCQUF3QixFQUMvQixLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQzNCLFVBQVUsR0FBRyxhQUFhLENBQUMsVUFBVTtJQUUzQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsVUFBVTs7U0FHaEMsMEJBQTBCLENBQUMsT0FBTyxFQUFFLFFBQVE7UUFDN0Msd0JBQXdCLEdBQUcsMkJBQTJCLENBQUMsT0FBTyxHQUM5RCxJQUFJLEdBQUcsd0JBQXdCLENBQUcsQ0FBRyxBQUFILEVBQUcsQUFBSCxDQUFHO0lBRTNDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSTs7U0FHbEIsNkJBQTZCLENBQUMsT0FBTyxFQUFFLE9BQU87UUFDN0MsT0FBTyxHQUFLLE9BQU8sQ0FBbkIsT0FBTyxFQUNULHdCQUF3QixHQUFHLDJCQUEyQixDQUFDLE9BQU8sR0FDOUQsSUFBSSxHQUFHLHdCQUF3QixFQUMvQiwyQkFBMkIsS0FBSyxPQUFPLENBQUMsSUFBSTtXQUUzQywyQkFBMkI7O0FBR3BDLE1BQU0sQ0FBQyxPQUFPO0lBQ1osdUJBQXVCLEVBQXZCLHVCQUF1QjtJQUN2QiwwQkFBMEIsRUFBMUIsMEJBQTBCO0lBQzFCLDZCQUE2QixFQUE3Qiw2QkFBNkI7O1NBR3RCLDJCQUEyQixDQUFDLE9BQU87UUFDbEMsUUFBUSxHQUFLLE9BQU8sQ0FBcEIsUUFBUSxFQUNWLHdCQUF3QixNQUEyQyxNQUFRLENBQTdDLGlDQUFpQyxHQUFDLENBQUMsR0FBVyxNQUFBLENBQVQsUUFBUTtXQUUxRSx3QkFBd0I7O1NBR3hCLGFBQWEsQ0FBQyxVQUFVO1FBQ3pCLFVBQVU7O1FBRVosVUFBVTtZQUNOLE9BQU8sR0FBRyw2QkFBNkI7UUFFN0MsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVO1lBQ3RCLE9BQU8sRUFBUCxPQUFPOzs7V0FJSixVQUFVIn0=